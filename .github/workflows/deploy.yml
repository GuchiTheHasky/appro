name: CI/CD

on:
  workflow_call:
    inputs:
      target:
        description: Target environment
        required: true
        type: string
      provider:
        description: Data provider
        required: true
        type: string
    secrets:
      IMAGE_REGISTRY_USER:
        required: true
      IMAGE_REGISTRY_PASSWORD:
        required: true
      INSTANCE_SSH_KEY:
        required: true
      INSTANCE_SSH_PORT:
        required: true
      INSTANCE_SSH_HOST:
        required: true
      INSTANCE_SSH_USER:
        required: true
  workflow_dispatch:

jobs:
  deploy:
    name: CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMAGE_REGISTRY_USER }}
          password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.INSTANCE_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Check SSH key
        run: |
          head -n 5 ~/.ssh/id_rsa
          echo "..."
          tail -n 5 ~/.ssh/id_rsa

      - name: Verify permissions
        run: |
          ls -l ~/.ssh/id_rsa

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.INSTANCE_SSH_PORT }} -H ${{ secrets.INSTANCE_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Debug - Print variables
        run: |
          echo "IMAGE_REGISTRY_USER: ${{ secrets.IMAGE_REGISTRY_USER }}"
          echo "target: ${{ github.event.inputs.target }}"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.INSTANCE_SSH_HOST }}
          username: ${{ secrets.INSTANCE_SSH_USER }}
          key: ~/.ssh/id_rsa
          port: ${{ secrets.INSTANCE_SSH_PORT }}
          script: |
            docker login -u ${{ secrets.IMAGE_REGISTRY_USER }} -p ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
            docker pull ${{ secrets.IMAGE_REGISTRY_USER }}/${{ github.event.inputs.target }}:latest
            docker stop my_container || true
            docker rm my_container || true
            docker run -d --name my_container -p 80:80 ${{ secrets.IMAGE_REGISTRY_USER }}/${{ github.event.inputs.target }}:latest

      - name: Verify Deployment
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.INSTANCE_SSH_USER }}@${{ secrets.INSTANCE_SSH_HOST }} "docker ps -a"
